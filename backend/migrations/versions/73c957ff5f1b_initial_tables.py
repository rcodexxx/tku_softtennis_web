"""initial tables

Revision ID: 73c957ff5f1b
Revises: 
Create Date: 2025-06-03 06:44:41.190153

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '73c957ff5f1b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='組織/隊伍'),
    sa.Column('city', sa.String(length=50), nullable=True, comment='所在城市'),
    sa.Column('notes', sa.Text(), nullable=True, comment='備註'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_organizations_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(length=30), nullable=False, comment='帳號'),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.Enum('MEMBER', 'CADRE', 'COACH', 'ADMIN', name='user_role'), nullable=False, comment='使用者角色'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='真實姓名'),
    sa.Column('display_name', sa.String(length=20), nullable=False, comment='暱稱'),
    sa.Column('student_id', sa.String(length=15), nullable=True, comment='學號'),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum'), nullable=True, comment='性別', create_type=False),
    sa.Column('position', sa.Enum('BACK', 'FRONT', 'VERSATILE', name='positionenum'), nullable=True, comment='位置', create_type=False),
    sa.Column('mu', sa.Float(), nullable=False, comment='TrueSkill μ'),
    sa.Column('sigma', sa.Float(), nullable=False, comment='TrueSkill σ'),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('joined_date', sa.Date(), nullable=True),
    sa.Column('leaved_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True, comment='備註'),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_member_organization_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_team_member_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id')
    )
    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_members_user_id'), ['user_id'], unique=True)

    op.create_table('match_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_date', sa.Date(), nullable=False),
    sa.Column('match_type', sa.Enum('SINGLES', 'DOUBLES', 'MIXED_DOUBLES', name='match_type_enum_mr'), nullable=False),
    sa.Column('match_format', sa.Enum('TIEBREAK', 'FIVE_GAME_SET', 'SEVEN_GAME_SET', 'NINE_GAME_SET', name='match_format_enum_mr'), nullable=False, comment='賽制'),
    sa.Column('side_a_player1_id', sa.Integer(), nullable=False),
    sa.Column('side_a_player2_id', sa.Integer(), nullable=True),
    sa.Column('side_b_player1_id', sa.Integer(), nullable=False),
    sa.Column('side_b_player2_id', sa.Integer(), nullable=True),
    sa.Column('side_a_games_won', sa.Integer(), nullable=False, comment='A方贏得的總局數'),
    sa.Column('side_b_games_won', sa.Integer(), nullable=False, comment='B方贏得的總局數'),
    sa.Column('side_a_outcome', sa.Enum('WIN', 'LOSS', 'NOT_PLAYED', name='outcome_enum_mr'), nullable=False, comment='A方視角的比賽結果'),
    sa.Column('match_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['side_a_player1_id'], ['members.id'], ),
    sa.ForeignKeyConstraint(['side_a_player2_id'], ['members.id'], ),
    sa.ForeignKeyConstraint(['side_b_player1_id'], ['members.id'], ),
    sa.ForeignKeyConstraint(['side_b_player2_id'], ['members.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True, comment='該球員本場比賽的特殊記錄'),
    sa.ForeignKeyConstraint(['match_id'], ['match_records.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['members.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('match_id', 'player_id', name='_match_player_stats_uc')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('player_stats')
    op.drop_table('match_records')
    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_members_user_id'))

    op.drop_table('members')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organizations_name'))

    op.drop_table('organizations')
    # ### end Alembic commands ###
